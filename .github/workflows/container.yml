# name: Container
# on: push

# jobs:
#   node-docker:
#     runs-on: ubuntu-latest
#     container: node:20-alpine3.18
#     # image: node:20-alpine3.18
#     # ports:
#     # volumes:
#     # options: --cpus 1 --host
#     steps:
#       - name: Log node version
#         run: |
#           node -v 
#           cat /etc/os-release


name: Container
on: push

jobs:
  docker-steps:
    runs-on: ubuntu-latest
    container:
      image: node:16.20.0-bullseye
    steps:
      - name: Log node version
        run: node -v 
      - name: Step with docker-steps
        uses: docker://node:18.16.0-alpine
        with: 
          entrypoint: '/bin/echo'
          args: 'Hello World'
      - name: Log node version
        uses: docker://node:18.16.0-alpine
        with: 
          entrypoint: '/usr/local/bin/node'
          args: -v
      
      - uses: actions/checkout@v1
      # - name: Run a Script
      #   uses: docker://node:18.16.0-alpine
      #   with: 
      #     entrypoint: ./script.sh
      #     args: "some string here"
      - name: List Files After Checkout
      # needed to run this to see where I was once I checked out my repo
        run: |
          pwd
          ls -la 
      - name: Run a Script
        uses: docker://node:18.16.0-alpine
        with: 
          entrypoint: ./script.sh
          args: "some string here"
      - name: Send a slack message
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          # this should actually be a secret because people can access it; do not add the actual secret here!
          SLACK_MESSAGE: 'Hello I did it!'

  # node-docker: 
  #   runs-on: ubuntu-latest
  #   services:
  #     app:
  #       image: alialaa17/node-api
  #       ports:
  #         - 3001:3000
  #     mongo:
  #       image: mongo
  #       ports:
  #         - "27017:27017"
  #   steps:
  #     - name: Post a user
  #       run: 'curl -X POST http://localhost:3001/api/user -H ''Content-Type: application/json'' -d ''{"username": "hello","address": "dwded"}'''
  #     - name: Get Users
  #       run: curl http://localhost:3001/api/users

